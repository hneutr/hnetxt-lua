local Divider = require("htl.text.neodivider")

describe("str_is_a", function()
    local small = Divider("small")
    local medium = Divider("medium")
    local large = Divider("large")

    it("+", function()
        assert(small:str_is_a(tostring(small)))
    end)

    it("-", function()
        assert.falsy(small:str_is_a(tostring(large)))
    end)
end)



-- describe("parse_levels", function()
--     it("works", function()
--         local lines = {
--             "a",
--             "=-------------------------------------------------------------------------------",
--             "[b]()",
--             "=-------------------------------------------------------------------------------",
--             "c",
--             "=-----------------------------------------------------------",
--             "d",
--             "=---------------------------------------",
--             "e",
--             "=-----------------------------------------------------------",
--             "f",
--             "=---------------------------------------",
--             "g",
--             "=-------------------------------------------------------------------------------",
--             "h"
--         }

--         assert.are.same(
--             {0, 0, 0, 0, 0, 1, 1, 2, 2, 1, 1, 2, 2, 0, 0},
--             Divider.parse_levels(lines)
--         )
--     end)
-- end)

-- describe("parse_divisions", function()
--     it("works", function()
--         local lines = {
--             "a",
--             "=-------------------------------------------------------------------------------",
--             "b",
--             "c",
--             "=-------------------------------------------------------------------------------",
--             "=-----------------------------------------------------------",
--             "=---------------------------------------",
--             "d",
--             "e",
--             "=-------------------------------------------------------------------------------",
--         }

--         assert.are.same(
--             {{1}, {3, 4}, {8, 9}},
--             Divider.parse_divisions(lines)
--         )
--     end)
-- end)
